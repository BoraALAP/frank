{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/components/pageSpecific/contact/ContactForm.tsx\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst ContactForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"firstName\",\n        name: \"firstName\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), formik.errors.firstName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 34\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lastName\",\n        name: \"lastName\",\n        type: \"text\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), formik.errors.lastName ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 30\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nconst Form = styled.form`\n  display: grid;\n  align-content:start;\n  align-items:start;\n`;\nexport default ContactForm;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/components/pageSpecific/contact/ContactForm.tsx"],"names":["useFormik","styled","validate","values","errors","firstName","length","lastName","email","test","ContactForm","formik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","Form","form"],"mappings":"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","sourcesContent":["import { useFormik, Field, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\n\nconst validate = values => {\n  const errors = {};\n  if (!values.firstName) {\n    errors.firstName = 'Required';\n  } else if (values.firstName.length > 15) {\n    errors.firstName = 'Must be 15 characters or less';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst ContactForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <Form onSubmit={formik.handleSubmit}>\n      <fieldset>\n\n      <label htmlFor=\"firstName\">First Name</label>\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstName}\n        />\n      {formik.errors.firstName ? <div>{formik.errors.firstName}</div> : null}\n        </fieldset>\n      <fieldset>\n\n      <label htmlFor=\"lastName\">Last Name</label>\n      <input\n        id=\"lastName\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.lastName}\n        />\n      {formik.errors.lastName ? <div>{formik.errors.lastName}</div> : null}\n        </fieldset>\n      <fieldset>\n\n      <label htmlFor=\"email\">Email Address</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n        />\n      {formik.errors.email ? <div>{formik.errors.email}</div> : null}\n        </fieldset>\n      <button type=\"submit\">Submit</button>\n    </Form>\n  );\n};\n\nconst Form = styled.form`\n  display: grid;\n  align-content:start;\n  align-items:start;\n`;\n\n\n\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}