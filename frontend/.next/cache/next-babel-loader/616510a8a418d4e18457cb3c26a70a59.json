{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport gql from 'graphql-tag';\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\"; // import { ApolloProvider } from \"react-apollo\";\n\nimport { ApolloProvider } from \"@apollo/client\";\nimport { primaryTheme } from \"../styles/theme\";\nimport GlobalStyle from \"../styles/global\";\nimport { initialState, globalReducer } from \"../context/reducer\";\nimport Meta from \"../components/global/Meta\";\nimport { Header } from \"../components/global/Header\";\nimport Footer from \"../components/global/Footer\";\nimport Loading from \"../components/global/Loading\";\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_API_URL\n  }),\n  cache: new InMemoryCache()\n});\nconst QUERY = gql`\nquery {\n  allOperations{\n    id\n    name\n  }\n}\n`;\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: store,\n    1: dispatch\n  } = useReducer(globalReducer, initialState);\n  const router = useRouter();\n  console.log(process.env.NEXT_PUBLIC_API_URL);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(KeystoneProvider, {\n      children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n        theme: primaryTheme,\n        children: [/*#__PURE__*/_jsxDEV(Meta, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), router.route !== \"/\" && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(Query, {\n          query: QUERY,\n          children: ({\n            loading,\n            data\n          }) => {\n            console.log(data);\n\n            if (loading) {\n              return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 22\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 22\n              }, this);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/pages/_app.tsx"],"names":["useReducer","useRouter","ThemeProvider","gql","HttpLink","ApolloClient","InMemoryCache","Query","KeystoneProvider","ApolloProvider","primaryTheme","GlobalStyle","initialState","globalReducer","Meta","Header","Footer","Loading","client","link","uri","process","env","NEXT_PUBLIC_API_URL","cache","QUERY","MyApp","Component","pageProps","store","dispatch","router","console","log","route","loading","data"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,KAAT,EAAgBC,gBAAhB,QAAwC,4BAAxC,C,CACA;;AACA,SAASC,cAAT,QAA+B,gBAA/B;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,IAAI,EAAE,IAAIf,QAAJ,CAAa;AACjBgB,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADA,GAAb,CADwB;AAK9BC,EAAAA,KAAK,EAAE,IAAIlB,aAAJ;AALuB,CAAjB,CAAf;AASA,MAAMmB,KAAK,GAAGtB,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AAUA,MAAMuB,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB9B,UAAU,CAACa,aAAD,EAAgBD,YAAhB,CAApC;AACA,QAAMmB,MAAM,GAAG9B,SAAS,EAAxB;AAEA+B,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAO,CAACC,GAAR,CAAYC,mBAAxB;AAKA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA,2BACE,QAAC,gBAAD;AAAA,6BAEE,QAAC,aAAD;AAAe,QAAA,KAAK,EAAER,YAAtB;AAAA,gCAEE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGqB,MAAM,CAACG,KAAP,KAAiB,GAAjB,iBAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAH3B,eAIE,QAAC,KAAD;AACE,UAAA,KAAK,EAAET,KADT;AAAA,oBAGC,CAAC;AAAEU,YAAAA,OAAF;AAAWC,YAAAA;AAAX,WAAD,KAAuB;AACtBJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AAEA,gBAAGD,OAAH,EAAW;AACT,kCAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFD,MAEO;AAEL,kCAAO,QAAC,SAAD,oBAAeP,SAAf;AAAA;AAAA;AAAA;AAAA,sBAAP;AACL;AAAC;AAXA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAiBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAkBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAlBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CApCD;;AAuCA,eAAeF,KAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport gql from 'graphql-tag';\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { Query, KeystoneProvider } from \"@keystonejs/apollo-helpers\";\n// import { ApolloProvider } from \"react-apollo\";\nimport { ApolloProvider } from \"@apollo/client\";\n\nimport { primaryTheme } from \"../styles/theme\";\nimport GlobalStyle from \"../styles/global\";\n\nimport { initialState, globalReducer } from \"../context/reducer\";\n\nimport Meta from \"../components/global/Meta\";\nimport { Header } from \"../components/global/Header\";\nimport { globalContext } from \"../context/contex\";\nimport Footer from \"../components/global/Footer\";\nimport Loading from \"../components/global/Loading\";\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_API_URL,\n\n  }),\n  cache: new InMemoryCache(),\n});\n\n\nconst QUERY = gql`\nquery {\n  allOperations{\n    id\n    name\n  }\n}\n`\n\n\nconst MyApp = ({ Component, pageProps }) => {\n  const [store, dispatch] = useReducer(globalReducer, initialState);\n  const router = useRouter();\n\n  console.log(process.env.NEXT_PUBLIC_API_URL);\n\n  \n\n\n  return (\n    <ApolloProvider client={client}>\n      <KeystoneProvider>\n\n        <ThemeProvider theme={primaryTheme}>\n\n          <Meta />\n          {router.route !== \"/\" && <Header />}\n          <Query\n            query={QUERY}\n          >\n          {({ loading, data }) => {\n            console.log(data);\n            \n            if(loading){ \n              return <Loading /> \n            } else { \n\n              return <Component {...pageProps} />\n        }}}\n          </Query>\n          <Footer />\n          <GlobalStyle />\n        </ThemeProvider>\n      </KeystoneProvider>\n    </ApolloProvider>\n  );\n};\n\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}