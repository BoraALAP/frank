{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useReducer } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { Query } from \"@keystonejs/apollo-helpers\";\nimport { ApolloProvider, gql } from \"@apollo/client\";\nimport { primaryTheme } from \"../styles/theme\";\nimport GlobalStyle from \"../styles/global\";\nimport { initialState, globalReducer } from \"../context/reducer\";\nimport Meta from \"../components/global/Meta\";\nimport { Header } from \"../components/global/Header\";\nimport Footer from \"../components/global/Footer\";\nimport Loading from \"../components/global/Loading\";\nconst client = new ApolloClient({\n  ssrMode: true,\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_API_URL,\n    fetchOptions: {\n      mode: 'cors'\n    }\n  })\n});\nconst QUERY = gql`\nquery {\n  allOperations{\n    id\n    name\n    defaultImage\n    video\n    place\n  }\n}\n`;\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: store,\n    1: dispatch\n  } = useReducer(globalReducer, initialState);\n  const router = useRouter();\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: primaryTheme,\n      children: [/*#__PURE__*/_jsxDEV(Meta, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), router.route !== \"/\" && /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(Query, {\n        query: QUERY,\n        children: ({\n          loading\n        }) => {\n          if (loading) {\n            return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 22\n            }, this);\n          } else {\n            return /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/pages/_app.tsx"],"names":["useReducer","useRouter","ThemeProvider","HttpLink","ApolloClient","InMemoryCache","Query","ApolloProvider","gql","primaryTheme","GlobalStyle","initialState","globalReducer","Meta","Header","Footer","Loading","client","ssrMode","cache","link","uri","process","env","NEXT_PUBLIC_API_URL","fetchOptions","mode","QUERY","MyApp","Component","pageProps","store","dispatch","router","route","loading"],"mappings":";;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,KAAT,QAAsB,4BAAtB;AACA,SAASC,cAAT,EAAyBC,GAAzB,QAAoC,gBAApC;AAEA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AAEA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,oBAA5C;AAEA,OAAOC,IAAP,MAAiB,2BAAjB;AACA,SAASC,MAAT,QAAuB,6BAAvB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,MAAMC,MAAM,GAAG,IAAIb,YAAJ,CAAiB;AAC9Bc,EAAAA,OAAO,EAAE,IADqB;AAE9BC,EAAAA,KAAK,EAAE,IAAId,aAAJ,EAFuB;AAG9Be,EAAAA,IAAI,EAAE,IAAIjB,QAAJ,CAAa;AACjBkB,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,mBADA;AAGjBC,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAE;AADM;AAHG,GAAb;AAHwB,CAAjB,CAAf;AAaA,MAAMC,KAAK,GAAGnB,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;;AAYA,MAAMoB,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBhC,UAAU,CAACY,aAAD,EAAgBD,YAAhB,CAApC;AACA,QAAMsB,MAAM,GAAGhC,SAAS,EAAxB;AAIA,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEgB,MAAxB;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAER,YAAtB;AAAA,8BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADF,EAEGwB,MAAM,CAACC,KAAP,KAAiB,GAAjB,iBAAwB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAF3B,eAGE,QAAC,KAAD;AACE,QAAA,KAAK,EAAEP,KADT;AAAA,kBAGC,CAAC;AAAEQ,UAAAA;AAAF,SAAD,KAAiB;AAChB,cAAGA,OAAH,EAAW;AACT,gCAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAFD,MAEO;AAEL,gCACA,QAAC,SAAD,oBAAeL,SAAf;AAAA;AAAA;AAAA;AAAA,oBADA;AAGL;AAAC;AAXA;AAAA;AAAA;AAAA;AAAA,cAHF,eAgBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA7BD;;AAgCA,eAAeF,KAAf","sourcesContent":["import { useReducer } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport { HttpLink } from \"apollo-link-http\";\nimport { ApolloClient } from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { Query } from \"@keystonejs/apollo-helpers\";\nimport { ApolloProvider, gql } from \"@apollo/client\";\n\nimport { primaryTheme } from \"../styles/theme\";\nimport GlobalStyle from \"../styles/global\";\n\nimport { initialState, globalReducer } from \"../context/reducer\";\n\nimport Meta from \"../components/global/Meta\";\nimport { Header } from \"../components/global/Header\";\nimport { globalContext } from \"../context/contex\";\nimport Footer from \"../components/global/Footer\";\nimport Loading from \"../components/global/Loading\";\n\nconst client = new ApolloClient({\n  ssrMode: true,\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: process.env.NEXT_PUBLIC_API_URL,\n\n    fetchOptions: {\n      mode: 'cors'\n     },\n  }),\n});\n\n\nconst QUERY = gql`\nquery {\n  allOperations{\n    id\n    name\n    defaultImage\n    video\n    place\n  }\n}\n`\n\nconst MyApp = ({ Component, pageProps }) => {\n  const [store, dispatch] = useReducer(globalReducer, initialState);\n  const router = useRouter();\n\n  \n\n  return (\n    <ApolloProvider client={client}>\n        <ThemeProvider theme={primaryTheme}>\n          <Meta />\n          {router.route !== \"/\" && <Header />}\n          <Query\n            query={QUERY}\n          >\n          {({ loading }) => {\n            if(loading){ \n              return <Loading /> \n            } else { \n\n              return  (\n              <Component {...pageProps} />\n              )\n        }}}\n           </Query> \n          <Footer />\n          <GlobalStyle />\n        </ThemeProvider>\n     </ApolloProvider>\n  );\n};\n\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}