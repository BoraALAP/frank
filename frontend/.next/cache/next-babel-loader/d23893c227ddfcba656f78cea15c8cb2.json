{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { GoogleMap, useLoadScript, Marker, MarkerClusterer } from '@react-google-maps/api';\nimport Loading from \"../../components/global/Loading\";\nimport { Container } from \"../../components/layout/Container\";\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n    allDealers(where: { OR: [{city_contains_i: $search},{name_contains_i:$search},{postal_contains_i:$search}] },sortBy: city_ASC) {\n      postal\n      city\n      name\n      province\n      id\n      venue{\n        formattedAddress\n        googlePlaceID\n        lat\n        lng\n      }\n    }\n  }\n`;\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nconst DealerFinder = props => {\n  const {\n    0: searchWord,\n    1: setSearchWord\n  } = useState(\"\");\n  const {\n    data,\n    loading,\n    error,\n    refetch\n  } = useQuery(DEALER_QUERY, {\n    fetchPolicy: \"cache-and-network\",\n    variables: {\n      search: searchWord\n    }\n  });\n  const {\n    0: locations,\n    1: setLocations\n  } = useState([]);\n  const {\n    0: location,\n    1: setLocation\n  } = useState({\n    lat: -3.745,\n    lng: -38.523\n  });\n  useEffect(() => {\n    //call db\n    !loading && setLocations(data === null || data === void 0 ? void 0 : data.allDealers);\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setLocation({\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      });\n    });\n  }, [loading]);\n  useEffect(() => {\n    //update state with new db after search\n    !loading && (data === null || data === void 0 ? void 0 : data.allDealers.length) > 0 && setLocations(data === null || data === void 0 ? void 0 : data.allDealers);\n  }, [searchWord]); //load google map and initilize\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAP_API\n  }); // if (loading) return <Loading />;\n\n  if (error) return `Error! ${error}`;\n\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded right now, sorry.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleChange = e => {\n    e.preventDefault();\n    setSearchWord(e.target.value);\n  };\n\n  const handleClick = position => {\n    setLocation({\n      lat: position.lat,\n      lng: position.lng\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    space: true,\n    padding: true,\n    children: /*#__PURE__*/_jsxDEV(Content, {\n      children: [/*#__PURE__*/_jsxDEV(Left, {\n        children: locations.length !== 0 ? locations.map(item => {\n          return /*#__PURE__*/_jsxDEV(Dealer, {\n            onClick: () => handleClick(item.venue),\n            active: location.lat === item.venue.lat && location.lng === item.venue.lng,\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: item.city\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.venue.formattedAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No Location Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Right, {\n        children: /*#__PURE__*/_jsxDEV(Fixed, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ostaco Windows and Doors products are proudly distributed by many retailers across Ontario. Please fill out this form and our team will quickly get back to you with information on your nearest dealer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            id: \"search \",\n            name: \"q\",\n            onChange: handleChange,\n            value: searchWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 11\n          }, this), isLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n              mapContainerStyle: containerStyle,\n              center: location,\n              zoom: 10,\n              children: /*#__PURE__*/_jsxDEV(MarkerClusterer // options={options}\n              , {\n                children: clusterer => locations.map(location => /*#__PURE__*/_jsxDEV(Marker, {\n                  position: {\n                    lat: location.venue.lat,\n                    lng: location.venue.lng\n                  },\n                  clusterer: clusterer\n                }, location.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\nconst Content = styled.div.withConfig({\n  displayName: \"dealerfinder__Content\",\n  componentId: \"sc-1ixs21k-0\"\n})([\"display:grid;grid-template-columns:2fr 3fr;gap:3rem;\"]);\nconst Input = styled.input.withConfig({\n  displayName: \"dealerfinder__Input\",\n  componentId: \"sc-1ixs21k-1\"\n})([\"display:grid;\"]);\nconst Left = styled.ol.withConfig({\n  displayName: \"dealerfinder__Left\",\n  componentId: \"sc-1ixs21k-2\"\n})([\"display:grid;gap:3rem;align-items:start;align-content:start;\"]);\nconst Right = styled.div.withConfig({\n  displayName: \"dealerfinder__Right\",\n  componentId: \"sc-1ixs21k-3\"\n})([\"display:grid;\"]);\nconst Fixed = styled.div.withConfig({\n  displayName: \"dealerfinder__Fixed\",\n  componentId: \"sc-1ixs21k-4\"\n})([\"display:grid;grid-gap:2vh;@media (min-width:768px){position:sticky;top:5rem;height:min-content;}\"]);\nconst Dealer = styled.li.withConfig({\n  displayName: \"dealerfinder__Dealer\",\n  componentId: \"sc-1ixs21k-5\"\n})([\"padding-left:5vw;grid-gap:0.5em;h6,h4{color:\", \";}\"], props => props.active && props.theme.color.secondary);\nexport default DealerFinder;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx"],"names":["useState","useEffect","styled","gql","useQuery","GoogleMap","useLoadScript","Marker","MarkerClusterer","Loading","Container","DEALER_QUERY","containerStyle","width","height","DealerFinder","props","searchWord","setSearchWord","data","loading","error","refetch","fetchPolicy","variables","search","locations","setLocations","location","setLocation","lat","lng","allDealers","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","length","isLoaded","loadError","googleMapsApiKey","process","env","NEXT_PUBLIC_GOOGLE_MAP_API","handleChange","e","preventDefault","target","value","handleClick","map","item","venue","city","name","formattedAddress","id","clusterer","Content","div","Input","input","Left","ol","Right","Fixed","Dealer","li","active","theme","color","secondary"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { GoogleMap, useLoadScript, Marker, MarkerClusterer } from '@react-google-maps/api';\n\nimport Loading from \"../../components/global/Loading\";\nimport { Container } from \"../../components/layout/Container\";\n\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n    allDealers(where: { OR: [{city_contains_i: $search},{name_contains_i:$search},{postal_contains_i:$search}] },sortBy: city_ASC) {\n      postal\n      city\n      name\n      province\n      id\n      venue{\n        formattedAddress\n        googlePlaceID\n        lat\n        lng\n      }\n    }\n  }\n`;\n\nconst containerStyle = {\n  width: '100%',\n  height: '400px'\n};\n\nconst DealerFinder = (props) => {\n  const [searchWord, setSearchWord] = useState(\"\")\n  const { data, loading, error, refetch} = useQuery(DEALER_QUERY,{\n    fetchPolicy: \"cache-and-network\",\n    variables: { search: searchWord }\n  })\n  const [locations, setLocations] = useState([])\n  const [location, setLocation] = useState({lat: -3.745,\n    lng: -38.523})\n  \n\n  useEffect(() => {\n    //call db\n    !loading && setLocations(data?.allDealers)\n    navigator.geolocation.getCurrentPosition(function(position){\n      setLocation({lat: position.coords.latitude, lng:position.coords.longitude })\n    })\n    \n  }, [loading])\n\n  useEffect(() => {\n    //update state with new db after search\n    !loading && data?.allDealers.length > 0 && setLocations(data?.allDealers)\n  },[searchWord])\n\n  //load google map and initilize\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAP_API,\n  })\n\n  // if (loading) return <Loading />;\n  if (error) return `Error! ${error}`;\n    \n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>\n  }\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    setSearchWord(e.target.value)\n  }\n\n  const handleClick = (position) => {\n    setLocation({lat: position.lat, lng:position.lng })\n  }\n\n  return(\n    <Container space padding>\n      <Content>\n      <Left>\n        {(locations.length !== 0 ) ?  \n          locations.map(item => {\n            return (\n              <Dealer key={item.id} onClick={()=>handleClick(item.venue)} active={location.lat === item.venue.lat && location.lng === item.venue.lng}>\n                <h4>{item.city}</h4>\n              <h6>{item.name}</h6>\n              <p>{item.venue.formattedAddress}</p>\n            </Dealer>\n            )\n          })\n          :(<p>No Location Found</p>)}\n      </Left>\n      <Right>\n        <Fixed>\n          <p>Ostaco Windows and Doors products are proudly distributed by many retailers across Ontario. Please fill out this form and our team will quickly get back to you with information on your nearest dealer.</p>\n          <Input  id=\"search \" name=\"q\" onChange={handleChange} value={searchWord}/>\n          \n            {isLoaded ? (\n              <>\n                <GoogleMap\n                mapContainerStyle={containerStyle}\n                center={location}\n                zoom={10}\n                >\n                  <MarkerClusterer \n                  // options={options}\n                  >\n                    {(clusterer) =>\n                      locations.map((location) => (\n                        <Marker key={location.id} position={{lat: location.venue.lat, lng: location.venue.lng}} clusterer={clusterer} />\n                      ))\n                    }\n                  </MarkerClusterer>\n                </GoogleMap>\n              </>\n            ) : <Loading /> \n            }\n        </Fixed>\n      </Right>\n      </Content>\n    </Container>\n  )\n}\n\nconst Content = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 3fr;\n  gap: 3rem;\n`;\n\nconst Input = styled.input`\n  display: grid;\n`;\n\nconst Left = styled.ol`\n  display: grid;\n  gap: 3rem;\n  align-items:start;\n  align-content:start;\n`;\n\nconst Right = styled.div`\n  display: grid;\n`;\n\nconst Fixed = styled.div`\n  display: grid;\n  grid-gap: 2vh;\n  @media (min-width: 768px) {\n    position: sticky;\n    top: 5rem;\n    height: min-content;\n  }\n`;\n\nconst Dealer = styled.li`\n  padding-left: 5vw;\n  grid-gap: 0.5em;\n  h6, h4{\n  color: ${props => props.active && props.theme.color.secondary};\n\n  }\n\n`;\n\nexport default DealerFinder;\n"]},"metadata":{},"sourceType":"module"}