{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { motion } from \"framer-motion\";\nimport Loading from \"../../components/global/Loading\";\nimport { Container } from \"../../components/layout/Container\";\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n    allDealers(where: { city_contains: $search }) {\n      postal\n      city\n      venue{\n        formattedAddress\n        googlePlaceID\n        lat\n        lng\n      }\n    }\n  }\n`;\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport { StandaloneSearchBox } from '@react-google-maps/api';\n\nconst DealerFinder = props => {\n  const [getDealer, {\n    data,\n    loading,\n    error\n  }] = useLazyQuery(DEALER_QUERY);\n  const {\n    0: locations,\n    1: setLocations\n  } = useState([]);\n  const {\n    0: searchWord,\n    1: setSearchWord\n  } = useState(\"\"); //select Input\n\n  const input = document.getElementById('pac-input'); //initilize searchbox\n\n  let searchBox;\n  useEffect(() => {\n    //call db\n    getDealer(); //load searchbox from google\n\n    if (isLoaded) {\n      searchBox = new google.maps.places.SearchBox(input);\n      console.log(searchBox.getPlaces());\n    }\n  }, []);\n  useEffect(() => {\n    //update state with new db after search\n    setLocations(data);\n  }, [searchWord]); // search the word in db\n\n  const handleRefetch = () => {\n    getDealer({\n      variables: {\n        search: searchWord\n      }\n    });\n  }; //load google map and initilize\n\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAP_API,\n    libraries: [\"places\"]\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 23\n  }, this);\n  if (error) return `Error! ${error}`;\n\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Map cannot be loaded right now, sorry.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 12\n    }, this);\n  }\n\n  const handleChange = e => {\n    setSearchWord(e.target.value);\n  };\n\n  const onLoad = ref => searchBox = ref;\n\n  const onPlacesChanged = () => {\n    const places = searchBox.getPlaces();\n    const bounds = new google.maps.LatLngBounds();\n    console.log(places, bounds);\n  };\n\n  console.log(searchBox);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    space: true,\n    padding: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefetch,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), isLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GoogleMap // options={options}\n        // onLoad={onLoad}\n        , {\n          mapContainerStyle: containerStyle,\n          center: center,\n          zoom: 10,\n          children: /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n            onLoad: onLoad,\n            onPlacesChanged: onPlacesChanged,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Customized your placeholder\",\n              id: \"pac-input\",\n              style: {\n                boxSizing: `border-box`,\n                border: `1px solid transparent`,\n                width: `240px`,\n                height: `32px`,\n                padding: `0 12px`,\n                borderRadius: `3px`,\n                boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n                fontSize: `14px`,\n                outline: `none`,\n                textOverflow: `ellipses`,\n                position: \"absolute\",\n                left: \"50%\",\n                marginLeft: \"-120px\"\n              },\n              onChange: handleChange,\n              value: searchWord\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}; // const Container = styled(motion.div)`\n//   display: grid;\n//   grid-gap: 1.5em;\n//   @media (min-width: 768px) {\n//     grid-template-columns: 2fr 3fr;\n//   }\n// `;\n\n\nconst LoadingS = motion.custom(styled(Loading).withConfig({\n  displayName: \"dealerfinder__LoadingS\",\n  componentId: \"sc-1ixs21k-0\"\n})([\"\"]));\nconst Left = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Left\",\n  componentId: \"sc-1ixs21k-1\"\n})([\"display:grid;grid-row:2;@media (min-width:768px){grid-row:1;}\"]);\nconst Right = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Right\",\n  componentId: \"sc-1ixs21k-2\"\n})([\"display:grid;@media (min-width:768px){position:relative;}\"]);\nconst H2 = styled.h2.withConfig({\n  displayName: \"dealerfinder__H2\",\n  componentId: \"sc-1ixs21k-3\"\n})([\"font-size:0.875rem;font-weight:400;max-width:450px;\"]);\nconst Fixed = styled.div.withConfig({\n  displayName: \"dealerfinder__Fixed\",\n  componentId: \"sc-1ixs21k-4\"\n})([\"display:grid;grid-gap:2vh;@media (min-width:768px){position:fixed;width:52.5vw;}\"]);\nconst InputS = styled.input.withConfig({\n  displayName: \"dealerfinder__InputS\",\n  componentId: \"sc-1ixs21k-5\"\n})([\"max-width:450px;\"]);\nconst Content = styled.ul.withConfig({\n  displayName: \"dealerfinder__Content\",\n  componentId: \"sc-1ixs21k-6\"\n})([\"list-style:none;padding-inline-start:0px;display:grid;grid-gap:1.5em;h4{margin:16px 0 0;}\"]);\nconst Dealer = styled.div.withConfig({\n  displayName: \"dealerfinder__Dealer\",\n  componentId: \"sc-1ixs21k-7\"\n})([\"display:grid;grid-gap:0.5em;h6{margin:0;}\"]); // const MarkerS = styled(Marker)`\n//   transform: scale(1.1);\n// `;\n\nconst InRow = styled.div.withConfig({\n  displayName: \"dealerfinder__InRow\",\n  componentId: \"sc-1ixs21k-8\"\n})([\"display:grid;grid-auto-flow:column;justify-content:start;align-items:baseline;grid-gap:1em;\"]);\nconst City = styled.div.withConfig({\n  displayName: \"dealerfinder__City\",\n  componentId: \"sc-1ixs21k-9\"\n})([\"h4{grid-column:1/-1;}display:grid;grid-gap:1em;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"dealerfinder__Form\",\n  componentId: \"sc-1ixs21k-10\"\n})([\"display:grid;\"]);\nexport default DealerFinder;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx"],"names":["useState","useEffect","styled","gql","useLazyQuery","motion","Loading","Container","DEALER_QUERY","containerStyle","width","height","center","lat","lng","GoogleMap","useLoadScript","StandaloneSearchBox","DealerFinder","props","getDealer","data","loading","error","locations","setLocations","searchWord","setSearchWord","input","document","getElementById","searchBox","isLoaded","google","maps","places","SearchBox","console","log","getPlaces","handleRefetch","variables","search","loadError","googleMapsApiKey","process","env","NEXT_PUBLIC_GOOGLE_MAP_API","libraries","handleChange","e","target","value","onLoad","ref","onPlacesChanged","bounds","LatLngBounds","boxSizing","border","padding","borderRadius","boxShadow","fontSize","outline","textOverflow","position","left","marginLeft","LoadingS","custom","Left","div","Right","H2","h2","Fixed","InputS","Content","ul","Dealer","InRow","City","Form","form"],"mappings":"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","sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { motion, AnimatePresence } from \"framer-motion\";\n\n\nimport Loading from \"../../components/global/Loading\";\nimport { Container } from \"../../components/layout/Container\";\n\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n    allDealers(where: { city_contains: $search }) {\n      postal\n      city\n      venue{\n        formattedAddress\n        googlePlaceID\n        lat\n        lng\n      }\n    }\n  }\n`;\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\n\n\nimport { GoogleMap, useLoadScript } from '@react-google-maps/api';\nimport { StandaloneSearchBox } from '@react-google-maps/api';\nconst DealerFinder = (props) => {\n  const [getDealer, { data, loading, error}] = useLazyQuery(DEALER_QUERY)\n  const [locations, setLocations] = useState([])\n  const [searchWord, setSearchWord] = useState(\"\")\n  //select Input\n  const input = document.getElementById('pac-input');\n  //initilize searchbox\n  let searchBox\n\n  useEffect(() => {\n    //call db\n    getDealer()\n    //load searchbox from google\n    if(isLoaded) {\n      searchBox = new google.maps.places.SearchBox(input); \n      console.log(searchBox.getPlaces());\n    }\n    \n    \n  }, [])\n\n  useEffect(() => {\n    //update state with new db after search\n    setLocations(data)\n  }, [searchWord])\n\n  // search the word in db\n  const handleRefetch = () => {\n    getDealer({variables: { search: searchWord }})\n  }\n\n  //load google map and initilize\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.NEXT_PUBLIC_GOOGLE_MAP_API,\n    libraries:[\"places\"]\n  })\n\n  if (loading) return <Loading />;\n  if (error) return `Error! ${error}`;\n    \n  if (loadError) {\n    return <div>Map cannot be loaded right now, sorry.</div>\n  }\n\n  const handleChange = (e) => {\n    setSearchWord(e.target.value)\n  }\n\n  const onLoad = ref => searchBox = ref;\n  const onPlacesChanged = () => {\n    const places = searchBox.getPlaces();\n    const bounds = new google.maps.LatLngBounds();\n    console.log(places, bounds);\n  }\n\n  console.log(searchBox);\n\n\n  return(\n    <Container space padding>\n      <div>\n        <h1>test</h1>\n        <button onClick={handleRefetch }>Button</button>\n        {isLoaded ? (\n          <><p>test</p>\n              <GoogleMap\n              // options={options}\n              // onLoad={onLoad}\n              mapContainerStyle={containerStyle}\n          center={center}\n          zoom={10}\n            >\n             <StandaloneSearchBox\n             onLoad={onLoad}\n             onPlacesChanged={\n               onPlacesChanged\n             }>\n      <input\n        type=\"text\"\n        placeholder=\"Customized your placeholder\"\n        id=\"pac-input\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`,\n          position: \"absolute\",\n          left: \"50%\",\n          marginLeft: \"-120px\"\n        }}\n        onChange={handleChange}\n        value={searchWord}\n      \n      />\n    </StandaloneSearchBox>\n            </GoogleMap></>\n         ) : <Loading /> }\n      </div>\n    </Container>\n  )\n}\n\n\n// const Container = styled(motion.div)`\n//   display: grid;\n//   grid-gap: 1.5em;\n//   @media (min-width: 768px) {\n//     grid-template-columns: 2fr 3fr;\n//   }\n// `;\n\nconst LoadingS = motion.custom(styled(Loading)``)\n\n\nconst Left = styled(motion.div)`\n  display: grid;\n  grid-row: 2;\n  @media (min-width: 768px) {\n    grid-row: 1;\n  }\n`;\n\nconst Right = styled(motion.div)`\n  display: grid;\n  @media (min-width: 768px) {\n    position: relative;\n  }\n`;\n\nconst H2 = styled.h2`\n  font-size: 0.875rem;\n  font-weight: 400;\n  max-width: 450px;\n`;\n\nconst Fixed = styled.div`\n  display: grid;\n  grid-gap: 2vh;\n  @media (min-width: 768px) {\n    position: fixed;\n    width: 52.5vw;\n  }\n`;\n\nconst InputS = styled.input`\n  max-width: 450px;\n`;\n\nconst Content = styled.ul`\n  list-style: none;\n  padding-inline-start: 0px;\n  display: grid;\n  grid-gap: 1.5em;\n  h4 {\n    margin: 16px 0 0;\n  }\n`;\n\nconst Dealer = styled.div`\n  display: grid;\n  grid-gap: 0.5em;\n  h6 {\n    margin: 0;\n  }\n`;\n\n// const MarkerS = styled(Marker)`\n//   transform: scale(1.1);\n// `;\n\nconst InRow = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  align-items: baseline;\n  grid-gap: 1em;\n`;\n\nconst City = styled.div`\n  h4 {\n    grid-column: 1/-1;\n  }\n  display: grid;\n  grid-gap: 1em;\n`;\n\nconst Form = styled.form`\n  display: grid;\n`;\n\nexport default DealerFinder;\n"]},"metadata":{},"sourceType":"module"}