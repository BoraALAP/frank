{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { GoogleMap // useLoadScript,\n// MarkerClusterer,\n, Marker, InfoWindow } from \"react-google-maps\";\nimport Loading from \"../../components/global/Loading\";\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n      allDealers(where: { city_contains: $search }) {\n        postal\n        city\n        venue{\n          formattedAddress\n          googlePlaceID\n          lat\n          lng\n        }\n      }\n    }\n  }\n`;\n\nconst DealerFinder = props => {\n  const {\n    data,\n    loading\n  } = useQuery(DEALER_QUERY);\n  const {\n    0: locations,\n    1: setLocations\n  } = useState(data);\n  const {\n    0: categories,\n    1: setCategories\n  } = useState(undefined);\n  const {\n    0: center,\n    1: setCenter\n  } = useState({});\n  const {\n    0: activeLocation,\n    1: setActiveLocation\n  } = useState(undefined);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: zoom,\n    1: setZoom\n  } = useState(10);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      if (position) {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      } else {\n        setCenter({\n          lat: 43.6539697,\n          lng: -79.4338794\n        });\n      }\n    });\n  }, []);\n  useEffect(() => {\n    if (!loading) {\n      var _data$dealersConnecti;\n\n      setLocations(data.allDealers);\n      setCategories(data === null || data === void 0 ? void 0 : (_data$dealersConnecti = data.dealersConnection) === null || _data$dealersConnecti === void 0 ? void 0 : _data$dealersConnecti.edges.map(({\n        node\n      }) => node.city).filter((value, index, self) => self.indexOf(value) === index).sort());\n    }\n  }, [data]);\n  const containerStyle = {\n    width: \"100%\",\n    height: \"90vh\",\n    maxHeight: \"50vh\"\n  };\n  const mapOptions = {\n    imagePath: \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\"\n  };\n\n  const HandleSetup = (loc, index) => {\n    // setInfo({ ...loc, index });\n    setActiveLocation(index);\n    setCenter({\n      lat: loc.lat,\n      lng: loc.lng\n    });\n    setZoom(16);\n  };\n\n  useEffect(() => {\n    fetchMore({\n      query: DEALER_QUERY,\n      variables: {\n        search\n      },\n      updateQuery: (previousResult, {\n        fetchMoreResult\n      }) => {\n        if (!fetchMoreResult) {\n          return previousResult;\n        }\n\n        console.log(previousResult, fetchMoreResult);\n        setCategories(fetchMoreResult.dealersConnection.edges.map(({\n          node\n        }) => node.city).filter((value, index, self) => self.indexOf(value) === index).sort());\n        setLocations(fetchMoreResult.dealersConnection.edges);\n      }\n    });\n  }, [search]);\n\n  const dealer = loc => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: loc.dealer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InRow, {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [loc.address, \" \", loc.postal, \" \", loc.city, \" \", loc.province]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_MAP_API_KEY,\n    libraries: [\"places\"] // ,\n    // ...otherOptions\n\n  });\n  const opacity = {\n    initial: {\n      x: -10,\n      opacity: 0\n    },\n    animate: {\n      x: 0,\n      opacity: 1\n    },\n    exit: {\n      x: 10,\n      opacity: 0\n    }\n  };\n\n  if (!center.lat || categories === undefined || !isLoaded) {\n    return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      exitBeforeEnter: true,\n      children: /*#__PURE__*/_jsxDEV(LoadingS, {\n        initial: \"initial\",\n        animate: \"animate\",\n        exit: \"exit\",\n        variants: opacity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 45\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 12\n    }, this);\n  }\n\n  console.log(locations);\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    exitBeforeEnter: true,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Left, {\n        initial: \"initial\",\n        animate: \"animate\",\n        exit: \"exit\",\n        variants: opacity,\n        children: /*#__PURE__*/_jsxDEV(Content, {\n          children: categories !== undefined && categories.length > 0 ? categories.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(City, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 19\n              }, this), locations.map(({\n                node\n              }) => {\n                if (node.city === item) {\n                  return /*#__PURE__*/_jsxDEV(Dealer, {\n                    active: activeLocation === node.id,\n                    onClick: () => {\n                      setCenter({\n                        lat: node.lat,\n                        lng: node.lng\n                      });\n                      HandleSetup(node, node.id);\n                      window.scrollTo(0, 0);\n                    },\n                    children: dealer(node)\n                  }, node.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 25\n                  }, this);\n                }\n              })]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this);\n          }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"There is no city with those letters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Right, {\n        initial: \"initial\",\n        animate: \"animate\",\n        exit: \"exit\",\n        variants: opacity,\n        children: /*#__PURE__*/_jsxDEV(Fixed, {\n          children: [/*#__PURE__*/_jsxDEV(H2, {\n            children: \"Ostaco Windows and Doors products are proudly distributed by many retailers across Ontario. Please fill out this form and our team will quickly get back to you with information on your nearest dealer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: /*#__PURE__*/_jsxDEV(InputS, {\n              type: \"search\",\n              name: \"search\",\n              placeholder: \"Which city are you looking for?\",\n              value: search,\n              onChange: e => setSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 11\n          }, this), center.lat && /*#__PURE__*/_jsxDEV(GoogleMap, {\n            center: center,\n            mapContainerStyle: containerStyle,\n            zoom: zoom,\n            children: [/*#__PURE__*/_jsxDEV(MarkerClusterer, {\n              options: mapOptions,\n              averageCenter: true,\n              children: clusterer => locations.map(({\n                node\n              }) => /*#__PURE__*/_jsxDEV(MarkerS, {\n                position: node,\n                clusterer: clusterer,\n                title: node.name,\n                active: activeLocation === node.id,\n                onClick: () => HandleSetup(node, node.id)\n              }, node.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), activeLocation && locations && locations.map(({\n              node\n            }) => {\n              return node.id === activeLocation && /*#__PURE__*/_jsxDEV(InfoWindow, {\n                onCloseClick: () => setActiveLocation(undefined),\n                position: {\n                  lat: node.lat,\n                  lng: node.lng\n                },\n                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: node.dealer\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(InRow, {\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      children: \"Address:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: [node.address, \" \", node.postal, \" \", node.city, \" \", node.province]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true)\n              }, node.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 23\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n\nconst Container = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Container\",\n  componentId: \"sc-1ixs21k-0\"\n})([\"display:grid;grid-gap:1.5em;@media (min-width:768px){grid-template-columns:2fr 3fr;}\"]);\nconst LoadingS = motion.custom(styled(Loading).withConfig({\n  displayName: \"dealerfinder__LoadingS\",\n  componentId: \"sc-1ixs21k-1\"\n})([\"\"]));\nconst Left = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Left\",\n  componentId: \"sc-1ixs21k-2\"\n})([\"display:grid;grid-row:2;@media (min-width:768px){grid-row:1;}\"]);\nconst Right = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Right\",\n  componentId: \"sc-1ixs21k-3\"\n})([\"display:grid;@media (min-width:768px){position:relative;}\"]);\nconst H2 = styled.h2.withConfig({\n  displayName: \"dealerfinder__H2\",\n  componentId: \"sc-1ixs21k-4\"\n})([\"font-size:0.875rem;font-weight:400;max-width:450px;\"]);\nconst Fixed = styled.div.withConfig({\n  displayName: \"dealerfinder__Fixed\",\n  componentId: \"sc-1ixs21k-5\"\n})([\"display:grid;grid-gap:2vh;@media (min-width:768px){position:fixed;width:52.5vw;}\"]);\nconst InputS = styled.input.withConfig({\n  displayName: \"dealerfinder__InputS\",\n  componentId: \"sc-1ixs21k-6\"\n})([\"max-width:450px;\"]);\nconst Content = styled.ul.withConfig({\n  displayName: \"dealerfinder__Content\",\n  componentId: \"sc-1ixs21k-7\"\n})([\"list-style:none;padding-inline-start:0px;display:grid;grid-gap:1.5em;h4{margin:16px 0 0;}\"]);\nconst Dealer = styled.div.withConfig({\n  displayName: \"dealerfinder__Dealer\",\n  componentId: \"sc-1ixs21k-8\"\n})([\"display:grid;grid-gap:0.5em;h6{margin:0;}\"]);\nconst MarkerS = styled(Marker).withConfig({\n  displayName: \"dealerfinder__MarkerS\",\n  componentId: \"sc-1ixs21k-9\"\n})([\"transform:scale(1.1);\"]);\nconst InRow = styled.div.withConfig({\n  displayName: \"dealerfinder__InRow\",\n  componentId: \"sc-1ixs21k-10\"\n})([\"display:grid;grid-auto-flow:column;justify-content:start;align-items:baseline;grid-gap:1em;\"]);\nconst City = styled.div.withConfig({\n  displayName: \"dealerfinder__City\",\n  componentId: \"sc-1ixs21k-11\"\n})([\"h4{grid-column:1/-1;}display:grid;grid-gap:1em;\"]);\nconst Form = styled.form.withConfig({\n  displayName: \"dealerfinder__Form\",\n  componentId: \"sc-1ixs21k-12\"\n})([\"display:grid;\"]);\nexport default DealerFinder;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx"],"names":["React","useState","useEffect","styled","gql","useQuery","motion","AnimatePresence","GoogleMap","Marker","InfoWindow","Loading","DEALER_QUERY","DealerFinder","props","data","loading","locations","setLocations","categories","setCategories","undefined","center","setCenter","activeLocation","setActiveLocation","search","setSearch","zoom","setZoom","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","allDealers","dealersConnection","edges","map","node","city","filter","value","index","self","indexOf","sort","containerStyle","width","height","maxHeight","mapOptions","imagePath","HandleSetup","loc","fetchMore","query","variables","updateQuery","previousResult","fetchMoreResult","console","log","dealer","address","postal","province","isLoaded","loadError","useLoadScript","googleMapsApiKey","process","env","REACT_APP_MAP_API_KEY","libraries","opacity","initial","x","animate","exit","length","item","id","window","scrollTo","e","target","clusterer","name","Container","div","LoadingS","custom","Left","Right","H2","h2","Fixed","InputS","input","Content","ul","Dealer","MarkerS","InRow","City","Form","form"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useQuery } from \"@apollo/client\";\n\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport {\n  GoogleMap,\n  // useLoadScript,\n  // MarkerClusterer,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport Loading from \"../../components/global/Loading\";\n\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n      allDealers(where: { city_contains: $search }) {\n        postal\n        city\n        venue{\n          formattedAddress\n          googlePlaceID\n          lat\n          lng\n        }\n      }\n    }\n  }\n`;\n\nconst DealerFinder = (props) => {\n  const { data, loading } = useQuery(DEALER_QUERY);\n\n  const [locations, setLocations] = useState(data);\n  const [categories, setCategories] = useState(undefined);\n  const [center, setCenter] = useState({});\n  const [activeLocation, setActiveLocation] = useState(undefined);\n  const [search, setSearch] = useState(\"\");\n  const [zoom, setZoom] = useState(10);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      if (position) {\n        setCenter({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      } else {\n        setCenter({\n          lat: 43.6539697,\n          lng: -79.4338794,\n        });\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    if (!loading) {\n      setLocations(data.allDealers);\n\n      setCategories(\n        data?.dealersConnection?.edges\n          .map(({ node }) => node.city)\n          .filter((value, index, self) => self.indexOf(value) === index)\n          .sort()\n      );\n    }\n  }, [data]);\n\n  const containerStyle = {\n    width: \"100%\",\n    height: \"90vh\",\n    maxHeight: \"50vh\",\n  };\n\n  const mapOptions = {\n    imagePath:\n      \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\n  };\n\n  const HandleSetup = (loc, index) => {\n    // setInfo({ ...loc, index });\n    setActiveLocation(index);\n    setCenter({ lat: loc.lat, lng: loc.lng });\n    setZoom(16);\n  };\n\n  useEffect(() => {\n    fetchMore({\n      query: DEALER_QUERY,\n      variables: {\n        search,\n      },\n      updateQuery: (previousResult, { fetchMoreResult }) => {\n        if (!fetchMoreResult) {\n          return previousResult;\n        }\n\n        console.log(previousResult, fetchMoreResult);\n\n        setCategories(\n          fetchMoreResult.dealersConnection.edges\n            .map(({ node }) => node.city)\n            .filter((value, index, self) => self.indexOf(value) === index)\n            .sort()\n        );\n        setLocations(fetchMoreResult.dealersConnection.edges);\n      },\n    });\n  }, [search]);\n\n  const dealer = (loc) => (\n    <>\n      <h5>{loc.dealer}</h5>\n      <InRow>\n        <h6>Address:</h6>{\" \"}\n        <span>\n          {loc.address} {loc.postal} {loc.city} {loc.province}\n        </span>\n      </InRow>\n\n      {/* <InRow>\n  //       <h6>Contact Person:</h6> <span>{loc.person}</span>\n  //     </InRow>\n  //     <InRow>\n  //       <h6>Email:</h6>{\" \"}\n  //       <a href={`mailto:${loc.email}`}>\n  //         <span>{loc.email}</span>\n  //       </a>\n  //     </InRow>\n  //     {loc.phone && (\n  //       <InRow>\n  //         <h6>Phone:</h6>{\" \"}\n  //         <a href={`tel:${loc.phone}`}>\n  //           <span>{loc.phone}</span>\n  //         </a>\n  //       </InRow>\n  //     )} */}\n    </>\n  );\n\n  const { isLoaded, loadError } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_MAP_API_KEY,\n    libraries: [\"places\"], // ,\n    // ...otherOptions\n  });\n\n  const opacity = {\n    initial: { x: -10, opacity: 0 },\n    animate: { x: 0, opacity: 1 },\n    exit: { x: 10, opacity: 0 },\n  };\n\n  if (!center.lat || categories === undefined || !isLoaded) {\n    return <AnimatePresence exitBeforeEnter><LoadingS initial=\"initial\"\n    animate=\"animate\"\n    exit=\"exit\"\n    variants={opacity} /></AnimatePresence>;\n  }\n\n  console.log(locations);\n  \n  \n  return (\n    <AnimatePresence exitBeforeEnter>\n      \n    <Container>\n      <Left  initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            variants={opacity}>\n        <Content>\n          {categories !== undefined && categories.length > 0 ? (\n            categories.map((item, index) => {\n              return (\n                <City key={index}>\n                  <h4>{item}</h4>\n                  {locations.map(({ node }) => {\n                    if (node.city === item) {\n                      return (\n                        <Dealer\n                          key={node.id}\n                          active={activeLocation === node.id}\n                          onClick={() => {\n                            setCenter({\n                              lat: node.lat,\n                              lng: node.lng,\n                            });\n                            HandleSetup(node, node.id);\n                            window.scrollTo(0, 0);\n                          }}\n                        >\n                          {dealer(node)}\n                        </Dealer>\n                      );\n                    }\n                  })}\n                </City>\n              );\n            })\n          ) : (\n            <h3>There is no city with those letters</h3>\n          )}\n        </Content>\n      </Left>\n      <Right  initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            variants={opacity}>\n        <Fixed>\n          <H2>\n            Ostaco Windows and Doors products are proudly distributed by many\n            retailers across Ontario. Please fill out this form and our team\n            will quickly get back to you with information on your nearest\n            dealer.\n          </H2>\n          <Form>\n            <InputS\n              type=\"search\"\n              name=\"search\"\n              placeholder=\"Which city are you looking for?\"\n              value={search}\n              onChange={(e) => setSearch(e.target.value)}\n            />\n          </Form>\n          {center.lat && (\n            <GoogleMap\n              center={center}\n              mapContainerStyle={containerStyle}\n              zoom={zoom}\n            >\n              <MarkerClusterer options={mapOptions} averageCenter={true}>\n                {(clusterer) =>\n                  locations.map(({ node }) => (\n                    <MarkerS\n                      key={node.id}\n                      position={node}\n                      clusterer={clusterer}\n                      title={node.name}\n                      active={activeLocation === node.id}\n                      onClick={() => HandleSetup(node, node.id)}\n                    />\n                  ))\n                }\n              </MarkerClusterer>\n\n              {(activeLocation && locations) &&\n                locations.map(({ node }) => {\n                  return (\n                    node.id === activeLocation && (\n                      <InfoWindow\n                        onCloseClick={() => setActiveLocation(undefined)}\n                        position={{ lat: node.lat, lng: node.lng }}\n                        key={node.id}\n                      >\n                        <>\n                          <h5>{node.dealer}</h5>\n\n                          <InRow>\n                            <h6>Address:</h6>\n                            <span>\n                              {node.address} {node.postal} {node.city}{\" \"}\n                              {node.province}\n                            </span>\n                          </InRow>\n                        </>\n                      </InfoWindow>\n                    )\n                  );\n                })}\n            </GoogleMap>\n          )}\n        </Fixed>\n      </Right>\n    </Container>\n    </AnimatePresence>\n  );\n};\n\nconst Container = styled(motion.div)`\n  display: grid;\n  grid-gap: 1.5em;\n  @media (min-width: 768px) {\n    grid-template-columns: 2fr 3fr;\n  }\n`;\n\nconst LoadingS = motion.custom(styled(Loading)``)\n\n\nconst Left = styled(motion.div)`\n  display: grid;\n  grid-row: 2;\n  @media (min-width: 768px) {\n    grid-row: 1;\n  }\n`;\n\nconst Right = styled(motion.div)`\n  display: grid;\n  @media (min-width: 768px) {\n    position: relative;\n  }\n`;\n\nconst H2 = styled.h2`\n  font-size: 0.875rem;\n  font-weight: 400;\n  max-width: 450px;\n`;\n\nconst Fixed = styled.div`\n  display: grid;\n  grid-gap: 2vh;\n  @media (min-width: 768px) {\n    position: fixed;\n    width: 52.5vw;\n  }\n`;\n\nconst InputS = styled.input`\n  max-width: 450px;\n`;\n\nconst Content = styled.ul`\n  list-style: none;\n  padding-inline-start: 0px;\n  display: grid;\n  grid-gap: 1.5em;\n  h4 {\n    margin: 16px 0 0;\n  }\n`;\n\nconst Dealer = styled.div`\n  display: grid;\n  grid-gap: 0.5em;\n  h6 {\n    margin: 0;\n  }\n`;\n\nconst MarkerS = styled(Marker)`\n  transform: scale(1.1);\n`;\n\nconst InRow = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  align-items: baseline;\n  grid-gap: 1em;\n`;\n\nconst City = styled.div`\n  h4 {\n    grid-column: 1/-1;\n  }\n  display: grid;\n  grid-gap: 1em;\n`;\n\nconst Form = styled.form`\n  display: grid;\n`;\n\nexport default DealerFinder;\n"]},"metadata":{},"sourceType":"module"}