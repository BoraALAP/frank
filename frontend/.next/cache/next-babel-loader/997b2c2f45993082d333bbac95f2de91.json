{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/components/pageSpecific/contact/ContactForm.tsx\";\nimport { Field, ErrorMessage, Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      lastName: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"firstName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"lastName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}; // const Form = styled.form`\n//   display: grid;\n//   align-content:start;\n//   align-items:start;\n// `;\n\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/components/pageSpecific/contact/ContactForm.tsx"],"names":["Field","ErrorMessage","Formik","Form","Yup","ContactForm","firstName","lastName","email","object","string","max","required","values","setSubmitting","setTimeout","alert","JSON","stringify"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,YAAhB,EAA8BC,MAA9B,EAAsCC,IAAtC,QAAkD,QAAlD;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,SAAS,EAAE,EADE;AAEbC,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAE;AAHM,KADjB;AAME,IAAA,gBAAgB,EAAEJ,GAAG,CAACK,MAAJ,CAAW;AAC3BH,MAAAA,SAAS,EAAEF,GAAG,CAACM,MAAJ,GACRC,GADQ,CACJ,EADI,EACA,+BADA,EAERC,QAFQ,CAEC,UAFD,CADgB;AAI3BL,MAAAA,QAAQ,EAAEH,GAAG,CAACM,MAAJ,GACPC,GADO,CACH,EADG,EACC,+BADD,EAEPC,QAFO,CAEE,UAFF,CAJiB;AAO3BJ,MAAAA,KAAK,EAAEJ,GAAG,CAACM,MAAJ,GAAaF,KAAb,CAAmB,uBAAnB,EAA4CI,QAA5C,CAAqD,UAArD;AAPoB,KAAX,CANpB;AAeE,IAAA,QAAQ,EAAE,CAACC,MAAD,EAAS;AAAEC,MAAAA;AAAF,KAAT,KAA+B;AACvCC,MAAAA,UAAU,CAAC,MAAM;AACfC,QAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AACAC,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KApBH;AAAA,2BAsBE,QAAC,IAAD;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,IAAI,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAtCD,C,CAwCA;AACA;AACA;AACA;AACA;;;AAEA,eAAeT,WAAf","sourcesContent":["import { Field, ErrorMessage, Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\n\nconst ContactForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .max(15, \"Must be 15 characters or less\")\n          .required(\"Required\"),\n        lastName: Yup.string()\n          .max(20, \"Must be 20 characters or less\")\n          .required(\"Required\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <Form>\n        <label htmlFor=\"firstName\">First Name</label>\n        <Field name=\"firstName\" type=\"text\" />\n        <ErrorMessage name=\"firstName\" />\n        <label htmlFor=\"lastName\">Last Name</label>\n        <Field name=\"lastName\" type=\"text\" />\n        <ErrorMessage name=\"lastName\" />\n        <label htmlFor=\"email\">Email Address</label>\n        <Field name=\"email\" type=\"email\" />\n        <ErrorMessage name=\"email\" />\n        <button type=\"submit\">Submit</button>\n      </Form>\n    </Formik>\n  );\n};\n\n// const Form = styled.form`\n//   display: grid;\n//   align-content:start;\n//   align-items:start;\n// `;\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}