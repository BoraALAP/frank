{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/components/pageSpecific/contact/ContactForm.tsx\";\nimport { Field, ErrorMessage, Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { Button } from \"../../UI/Links\";\n\nconst ContactForm = () => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      checked: []\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      lastName: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\"),\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        alert(JSON.stringify(values, null, 2));\n        setSubmitting(false);\n      }, 400);\n    },\n    children: /*#__PURE__*/_jsxDEV(FormS, {\n      children: [/*#__PURE__*/_jsxDEV(InRow, {\n        children: [/*#__PURE__*/_jsxDEV(FieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"firstName\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"firstName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FieldSet, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"lastName\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"lastName\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        role: \"group\",\n        \"aria-labelledby\": \"checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"I am a...*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: \"Homeowner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), \"Homeowner\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: \"Architect/Designer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), \"Architect/Designer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: \"Residential Contractor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), \"Residential Contractor\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: \"Commercial/Non-Residential Builder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), \"Commercial/Non-Residential Builder\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: \"Distributor/Dealer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), \"Distributor/Dealer\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            type: \"checkbox\",\n            name: \"checked\",\n            value: \"Other\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), \"Other\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FieldSet, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}; // const Form = styled.form`\n//   display: grid;\n//   align-content:start;\n//   align-items:start;\n// `;\n\n\nconst FormS = styled(Form).withConfig({\n  displayName: \"ContactForm__FormS\",\n  componentId: \"sc-1y12kqm-0\"\n})([\"display:grid;gap:2rem;\"]);\nconst FieldSet = styled.fieldset.withConfig({\n  displayName: \"ContactForm__FieldSet\",\n  componentId: \"sc-1y12kqm-1\"\n})([\"display:grid;border:none;margin:0;padding:0;\"]);\nconst InRow = styled.div.withConfig({\n  displayName: \"ContactForm__InRow\",\n  componentId: \"sc-1y12kqm-2\"\n})([\"gap:2rem;display:grid;grid-auto-flow:row;@media screen and (min-width:\", \"){grid-auto-flow:column;}\"], ({\n  theme\n}) => theme.mq.tablet);\nconst List = styled.div.withConfig({\n  displayName: \"ContactForm__List\",\n  componentId: \"sc-1y12kqm-3\"\n})([\"display:grid;grid-auto-flow:row;label{display:grid;align-items:center;grid-auto-flow:column;justify-content:start;}\"]);\nexport default ContactForm;","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/components/pageSpecific/contact/ContactForm.tsx"],"names":["Field","ErrorMessage","Formik","Form","styled","Yup","Button","ContactForm","firstName","lastName","email","checked","object","string","max","required","values","setSubmitting","setTimeout","alert","JSON","stringify","FormS","FieldSet","fieldset","InRow","div","theme","mq","tablet","List"],"mappings":"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","sourcesContent":["import { Field, ErrorMessage, Formik, Form } from \"formik\";\nimport styled from \"styled-components\";\nimport * as Yup from \"yup\";\nimport { Button } from \"../../UI/Links\";\n\nconst ContactForm = () => {\n  return (\n    <Formik\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n        checked: [],\n      }}\n      validationSchema={Yup.object({\n        firstName: Yup.string()\n          .max(15, \"Must be 15 characters or less\")\n          .required(\"Required\"),\n        lastName: Yup.string()\n          .max(20, \"Must be 20 characters or less\")\n          .required(\"Required\"),\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      <FormS>\n        <InRow>\n          <FieldSet>\n            <label htmlFor=\"firstName\">First Name</label>\n            <Field name=\"firstName\" type=\"text\" />\n            <ErrorMessage name=\"firstName\" />\n          </FieldSet>\n          <FieldSet>\n            <label htmlFor=\"lastName\">Last Name</label>\n            <Field name=\"lastName\" type=\"text\" />\n            <ErrorMessage name=\"lastName\" />\n          </FieldSet>\n        </InRow>\n        <List role=\"group\" aria-labelledby=\"checkbox-group\">\n          <p>I am a...*</p>\n          <label>\n            <Field type=\"checkbox\" name=\"checked\" value=\"Homeowner\" />\n            Homeowner\n          </label>\n          <label>\n            <Field type=\"checkbox\" name=\"checked\" value=\"Architect/Designer\" />\n            Architect/Designer\n          </label>\n          <label>\n            <Field\n              type=\"checkbox\"\n              name=\"checked\"\n              value=\"Residential Contractor\"\n            />\n            Residential Contractor\n          </label>\n          <label>\n            <Field\n              type=\"checkbox\"\n              name=\"checked\"\n              value=\"Commercial/Non-Residential Builder\"\n            />\n            Commercial/Non-Residential Builder\n          </label>\n          <label>\n            <Field type=\"checkbox\" name=\"checked\" value=\"Distributor/Dealer\" />\n            Distributor/Dealer\n          </label>\n          <label>\n            <Field type=\"checkbox\" name=\"checked\" value=\"Other\" />\n            Other\n          </label>\n        </List>\n        <FieldSet>\n          <label htmlFor=\"email\">Email Address</label>\n          <Field name=\"email\" type=\"email\" />\n          <ErrorMessage name=\"email\" />\n        </FieldSet>\n\n        <Button type=\"submit\">Submit</Button>\n      </FormS>\n    </Formik>\n  );\n};\n\n// const Form = styled.form`\n//   display: grid;\n//   align-content:start;\n//   align-items:start;\n// `;\n\nconst FormS = styled(Form)`\n  display: grid;\n  gap: 2rem;\n`;\n\nconst FieldSet = styled.fieldset`\n  display: grid;\n  border: none;\n  margin: 0;\n  padding: 0;\n`;\n\nconst InRow = styled.div`\n  gap: 2rem;\n  display: grid;\n  grid-auto-flow: row;\n  @media screen and (min-width: ${({ theme }) => theme.mq.tablet}) {\n    grid-auto-flow: column;\n  }\n`;\n\nconst List = styled.div`\n  display: grid;\n  grid-auto-flow: row;\n  label {\n    display: grid;\n    align-items: center;\n    grid-auto-flow: column;\n    justify-content: start;\n  }\n`;\n\nexport default ContactForm;\n"]},"metadata":{},"sourceType":"module"}