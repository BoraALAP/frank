{"ast":null,"code":"import _slicedToArray from \"/Users/artticfox/Desktop/Work/frank/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/artticfox/Desktop/Work/frank/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query DEALER_QUERY($search: String) {\\n    allDealers(where: { city_contains: $search }) {\\n      postal\\n      city\\n      venue{\\n        formattedAddress\\n        googlePlaceID\\n        lat\\n        lng\\n      }\\n    }\\n  }\\n  \\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\nimport { motion } from \"framer-motion\";\nimport { compose, withProps, lifecycle } from \"recompose\";\nimport { GoogleMap, withGoogleMap, withScriptjs // useLoadScript,\n// MarkerClusterer,\n, Marker } from \"react-google-maps\";\nimport Loading from \"../../components/global/Loading\";\nimport { Container } from \"../../components/layout/Container\";\nvar DEALER_QUERY = gql(_templateObject());\n\nvar DealerFinder = function DealerFinder(props) {\n  _s();\n\n  var _useLazyQuery = useLazyQuery(DEALER_QUERY),\n      _useLazyQuery2 = _slicedToArray(_useLazyQuery, 2),\n      getDealer = _useLazyQuery2[0],\n      _useLazyQuery2$ = _useLazyQuery2[1],\n      data = _useLazyQuery2$.data,\n      loading = _useLazyQuery2$.loading,\n      error = _useLazyQuery2$.error;\n\n  var _useState = useState([]),\n      locations = _useState[0],\n      setLocations = _useState[1];\n\n  useEffect(function () {\n    getDealer();\n  }, []);\n  useEffect(function () {\n    setLocations(data);\n  }, [data]);\n  if (loading) return null;\n  if (error) return \"Error! \".concat(error);\n  console.log(data, locations);\n\n  var handleRefetch = function handleRefetch() {\n    getDealer({\n      variables: {\n        search: \"Tor\"\n      }\n    });\n  };\n\n  var MapComponent = compose(withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\".concat(process.env.NEXT_PUBLIC_GOOGLE_MAP_API, \"&v=3.exp&libraries=geometry,drawing,places\"),\n    loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, _this),\n    containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }, _this),\n    mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, _this)\n  }), lifecycle({\n    componentWillMount: function componentWillMount() {\n      var _this2 = this;\n\n      var refs = {};\n      this.setState({\n        bounds: null,\n        center: {\n          lat: 41.9,\n          lng: -87.624\n        },\n        markers: [],\n        onMapMounted: function onMapMounted(ref) {\n          refs.map = ref;\n        },\n        onBoundsChanged: function onBoundsChanged() {\n          _this2.setState({\n            bounds: refs.map.getBounds(),\n            center: refs.map.getCenter()\n          });\n        },\n        onSearchBoxMounted: function onSearchBoxMounted(ref) {\n          refs.searchBox = ref;\n        },\n        onPlacesChanged: function onPlacesChanged() {\n          var places = refs.searchBox.getPlaces();\n          var bounds = new google.maps.LatLngBounds();\n          places.forEach(function (place) {\n            if (place.geometry.viewport) {\n              bounds.union(place.geometry.viewport);\n            } else {\n              bounds.extend(place.geometry.location);\n            }\n          });\n          var nextMarkers = places.map(function (place) {\n            return {\n              position: place.geometry.location\n            };\n          });\n\n          var nextCenter = _.get(nextMarkers, '0.position', _this2.state.center);\n\n          _this2.setState({\n            center: nextCenter,\n            markers: nextMarkers\n          }); // refs.map.fitBounds(bounds);\n\n        }\n      });\n    }\n  }), withScriptjs, withGoogleMap)(function (props) {\n    return /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      children: props.isMarkerShown && /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: -34.397,\n          lng: 150.644\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    space: true,\n    padding: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefetch,\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(MapComponent, {\n        isMarkerShown: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 3\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, _this); //   const [locations, setLocations] = useState(data);\n  //   const [categories, setCategories] = useState(undefined);\n  //   const [center, setCenter] = useState({});\n  //   const [activeLocation, setActiveLocation] = useState(undefined);\n  //   const [search, setSearch] = useState(\"\");\n  //   const [zoom, setZoom] = useState(10);\n  //   useEffect(() => {\n  //     navigator.geolocation.getCurrentPosition((position) => {\n  //       if (position) {\n  //         setCenter({\n  //           lat: position.coords.latitude,\n  //           lng: position.coords.longitude,\n  //         });\n  //       } else {\n  //         setCenter({\n  //           lat: 43.6539697,\n  //           lng: -79.4338794,\n  //         });\n  //       }\n  //     });\n  //   }, []);\n  //   useEffect(() => {\n  //     if (!loading) {\n  //       setLocations(data.allDealers);\n  //       setCategories(\n  //         data?.dealersConnection?.edges\n  //           .map(({ node }) => node.city)\n  //           .filter((value, index, self) => self.indexOf(value) === index)\n  //           .sort()\n  //       );\n  //     }\n  //   }, [data]);\n  //   const containerStyle = {\n  //     width: \"100%\",\n  //     height: \"90vh\",\n  //     maxHeight: \"50vh\",\n  //   };\n  //   const mapOptions = {\n  //     imagePath:\n  //       \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\n  //   };\n  //   const HandleSetup = (loc, index) => {\n  //     // setInfo({ ...loc, index });\n  //     setActiveLocation(index);\n  //     setCenter({ lat: loc.lat, lng: loc.lng });\n  //     setZoom(16);\n  //   };\n  //   useEffect(() => {\n  //     fetchMore({\n  //       query: DEALER_QUERY,\n  //       variables: {\n  //         search,\n  //       },\n  //       updateQuery: (previousResult, { fetchMoreResult }) => {\n  //         if (!fetchMoreResult) {\n  //           return previousResult;\n  //         }\n  //         console.log(previousResult, fetchMoreResult);\n  //         setCategories(\n  //           fetchMoreResult.dealersConnection.edges\n  //             .map(({ node }) => node.city)\n  //             .filter((value, index, self) => self.indexOf(value) === index)\n  //             .sort()\n  //         );\n  //         setLocations(fetchMoreResult.dealersConnection.edges);\n  //       },\n  //     });\n  //   }, [search]);\n  //   const dealer = (loc) => (\n  //     <>\n  //       <h5>{loc.dealer}</h5>\n  //       <InRow>\n  //         <h6>Address:</h6>{\" \"}\n  //         <span>\n  //           {loc.address} {loc.postal} {loc.city} {loc.province}\n  //         </span>\n  //       </InRow>\n  //       {/* <InRow>\n  //   //       <h6>Contact Person:</h6> <span>{loc.person}</span>\n  //   //     </InRow>\n  //   //     <InRow>\n  //   //       <h6>Email:</h6>{\" \"}\n  //   //       <a href={`mailto:${loc.email}`}>\n  //   //         <span>{loc.email}</span>\n  //   //       </a>\n  //   //     </InRow>\n  //   //     {loc.phone && (\n  //   //       <InRow>\n  //   //         <h6>Phone:</h6>{\" \"}\n  //   //         <a href={`tel:${loc.phone}`}>\n  //   //           <span>{loc.phone}</span>\n  //   //         </a>\n  //   //       </InRow>\n  //   //     )} */}\n  //     </>\n  //   );\n  //   const { isLoaded, loadError } = useLoadScript({\n  //     googleMapsApiKey: process.env.REACT_APP_MAP_API_KEY,\n  //     libraries: [\"places\"], // ,\n  //     // ...otherOptions\n  //   });\n  //   const opacity = {\n  //     initial: { x: -10, opacity: 0 },\n  //     animate: { x: 0, opacity: 1 },\n  //     exit: { x: 10, opacity: 0 },\n  //   };\n  //   if (!center.lat || categories === undefined || !isLoaded) {\n  //     return <AnimatePresence exitBeforeEnter><LoadingS initial=\"initial\"\n  //     animate=\"animate\"\n  //     exit=\"exit\"\n  //     variants={opacity} /></AnimatePresence>;\n  //   }\n  //   console.log(locations);\n  //   return (\n  //     <AnimatePresence exitBeforeEnter>\n  //     <Container>\n  //       <Left  initial=\"initial\"\n  //             animate=\"animate\"\n  //             exit=\"exit\"\n  //             variants={opacity}>\n  //         <Content>\n  //           {categories !== undefined && categories.length > 0 ? (\n  //             categories.map((item, index) => {\n  //               return (\n  //                 <City key={index}>\n  //                   <h4>{item}</h4>\n  //                   {locations.map(({ node }) => {\n  //                     if (node.city === item) {\n  //                       return (\n  //                         <Dealer\n  //                           key={node.id}\n  //                           active={activeLocation === node.id}\n  //                           onClick={() => {\n  //                             setCenter({\n  //                               lat: node.lat,\n  //                               lng: node.lng,\n  //                             });\n  //                             HandleSetup(node, node.id);\n  //                             window.scrollTo(0, 0);\n  //                           }}\n  //                         >\n  //                           {dealer(node)}\n  //                         </Dealer>\n  //                       );\n  //                     }\n  //                   })}\n  //                 </City>\n  //               );\n  //             })\n  //           ) : (\n  //             <h3>There is no city with those letters</h3>\n  //           )}\n  //         </Content>\n  //       </Left>\n  //       <Right  initial=\"initial\"\n  //             animate=\"animate\"\n  //             exit=\"exit\"\n  //             variants={opacity}>\n  //         <Fixed>\n  //           <H2>\n  //             Ostaco Windows and Doors products are proudly distributed by many\n  //             retailers across Ontario. Please fill out this form and our team\n  //             will quickly get back to you with information on your nearest\n  //             dealer.\n  //           </H2>\n  //           <Form>\n  //             <InputS\n  //               type=\"search\"\n  //               name=\"search\"\n  //               placeholder=\"Which city are you looking for?\"\n  //               value={search}\n  //               onChange={(e) => setSearch(e.target.value)}\n  //             />\n  //           </Form>\n  //           {center.lat && (\n  //             <GoogleMap\n  //               center={center}\n  //               mapContainerStyle={containerStyle}\n  //               zoom={zoom}\n  //             >\n  //               <MarkerClusterer options={mapOptions} averageCenter={true}>\n  //                 {(clusterer) =>\n  //                   locations.map(({ node }) => (\n  //                     <MarkerS\n  //                       key={node.id}\n  //                       position={node}\n  //                       clusterer={clusterer}\n  //                       title={node.name}\n  //                       active={activeLocation === node.id}\n  //                       onClick={() => HandleSetup(node, node.id)}\n  //                     />\n  //                   ))\n  //                 }\n  //               </MarkerClusterer>\n  //               {(activeLocation && locations) &&\n  //                 locations.map(({ node }) => {\n  //                   return (\n  //                     node.id === activeLocation && (\n  //                       <InfoWindow\n  //                         onCloseClick={() => setActiveLocation(undefined)}\n  //                         position={{ lat: node.lat, lng: node.lng }}\n  //                         key={node.id}\n  //                       >\n  //                         <>\n  //                           <h5>{node.dealer}</h5>\n  //                           <InRow>\n  //                             <h6>Address:</h6>\n  //                             <span>\n  //                               {node.address} {node.postal} {node.city}{\" \"}\n  //                               {node.province}\n  //                             </span>\n  //                           </InRow>\n  //                         </>\n  //                       </InfoWindow>\n  //                     )\n  //                   );\n  //                 })}\n  //             </GoogleMap>\n  //           )}\n  //         </Fixed>\n  //       </Right>\n  //     </Container>\n  //     </AnimatePresence>\n  //   );\n}; // const Container = styled(motion.div)`\n//   display: grid;\n//   grid-gap: 1.5em;\n//   @media (min-width: 768px) {\n//     grid-template-columns: 2fr 3fr;\n//   }\n// `;\n\n\n_s(DealerFinder, \"3hcJtJvDBCjHmVZDmg1Cjs+CE/A=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = DealerFinder;\nvar LoadingS = motion.custom(styled(Loading).withConfig({\n  displayName: \"dealerfinder__LoadingS\",\n  componentId: \"sc-1ixs21k-0\"\n})([\"\"]));\nvar Left = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Left\",\n  componentId: \"sc-1ixs21k-1\"\n})([\"display:grid;grid-row:2;@media (min-width:768px){grid-row:1;}\"]);\nvar Right = styled(motion.div).withConfig({\n  displayName: \"dealerfinder__Right\",\n  componentId: \"sc-1ixs21k-2\"\n})([\"display:grid;@media (min-width:768px){position:relative;}\"]);\nvar H2 = styled.h2.withConfig({\n  displayName: \"dealerfinder__H2\",\n  componentId: \"sc-1ixs21k-3\"\n})([\"font-size:0.875rem;font-weight:400;max-width:450px;\"]);\nvar Fixed = styled.div.withConfig({\n  displayName: \"dealerfinder__Fixed\",\n  componentId: \"sc-1ixs21k-4\"\n})([\"display:grid;grid-gap:2vh;@media (min-width:768px){position:fixed;width:52.5vw;}\"]);\nvar InputS = styled.input.withConfig({\n  displayName: \"dealerfinder__InputS\",\n  componentId: \"sc-1ixs21k-5\"\n})([\"max-width:450px;\"]);\nvar Content = styled.ul.withConfig({\n  displayName: \"dealerfinder__Content\",\n  componentId: \"sc-1ixs21k-6\"\n})([\"list-style:none;padding-inline-start:0px;display:grid;grid-gap:1.5em;h4{margin:16px 0 0;}\"]);\nvar Dealer = styled.div.withConfig({\n  displayName: \"dealerfinder__Dealer\",\n  componentId: \"sc-1ixs21k-7\"\n})([\"display:grid;grid-gap:0.5em;h6{margin:0;}\"]);\nvar MarkerS = styled(Marker).withConfig({\n  displayName: \"dealerfinder__MarkerS\",\n  componentId: \"sc-1ixs21k-8\"\n})([\"transform:scale(1.1);\"]);\nvar InRow = styled.div.withConfig({\n  displayName: \"dealerfinder__InRow\",\n  componentId: \"sc-1ixs21k-9\"\n})([\"display:grid;grid-auto-flow:column;justify-content:start;align-items:baseline;grid-gap:1em;\"]);\nvar City = styled.div.withConfig({\n  displayName: \"dealerfinder__City\",\n  componentId: \"sc-1ixs21k-10\"\n})([\"h4{grid-column:1/-1;}display:grid;grid-gap:1em;\"]);\nvar Form = styled.form.withConfig({\n  displayName: \"dealerfinder__Form\",\n  componentId: \"sc-1ixs21k-11\"\n})([\"display:grid;\"]);\nexport default DealerFinder;\n\nvar _c;\n\n$RefreshReg$(_c, \"DealerFinder\");","map":{"version":3,"sources":["/Users/artticfox/Desktop/Work/frank/frontend/pages/sub/dealerfinder.tsx"],"names":["useState","useEffect","styled","gql","useLazyQuery","motion","compose","withProps","lifecycle","GoogleMap","withGoogleMap","withScriptjs","Marker","Loading","Container","DEALER_QUERY","DealerFinder","props","getDealer","data","loading","error","locations","setLocations","console","log","handleRefetch","variables","search","MapComponent","googleMapURL","process","env","NEXT_PUBLIC_GOOGLE_MAP_API","loadingElement","height","containerElement","mapElement","componentWillMount","refs","setState","bounds","center","lat","lng","markers","onMapMounted","ref","map","onBoundsChanged","getBounds","getCenter","onSearchBoxMounted","searchBox","onPlacesChanged","places","getPlaces","google","maps","LatLngBounds","forEach","place","geometry","viewport","union","extend","location","nextMarkers","position","nextCenter","_","get","state","isMarkerShown","LoadingS","custom","Left","div","Right","H2","h2","Fixed","InputS","input","Content","ul","Dealer","MarkerS","InRow","City","Form","form"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\n\nimport { motion, AnimatePresence } from \"framer-motion\";\n\nimport { compose, withProps, lifecycle } from \"recompose\"\nimport {\n  GoogleMap,\n  withGoogleMap,\n  withScriptjs,\n  // useLoadScript,\n  // MarkerClusterer,\n  Marker,\n  InfoWindow,\n} from \"react-google-maps\";\nimport SearchBox from \"react-google-maps/lib/components/places/SearchBox\";\nimport Loading from \"../../components/global/Loading\";\nimport { Container } from \"../../components/layout/Container\";\n\nconst DEALER_QUERY = gql`\n  query DEALER_QUERY($search: String) {\n    allDealers(where: { city_contains: $search }) {\n      postal\n      city\n      venue{\n        formattedAddress\n        googlePlaceID\n        lat\n        lng\n      }\n    }\n  }\n  \n`;\n\nconst DealerFinder = (props) => {\n  const [getDealer, { data, loading, error}] = useLazyQuery(DEALER_QUERY)\n  const [locations, setLocations] = useState([])\n\n  useEffect(() => {\n    getDealer()\n  \n  }, [])\n\n  useEffect(() => {\n    setLocations(data)\n  \n  }, [data])\n\n  if (loading) return null;\n  if (error) return `Error! ${error}`;\n\n  console.log(data, locations);\n\n  const handleRefetch = () => {\n    getDealer({variables: { search: \"Tor\" }})\n  }\n\n  const MapComponent = compose(\n    withProps({\n      googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${process.env.NEXT_PUBLIC_GOOGLE_MAP_API}&v=3.exp&libraries=geometry,drawing,places`,\n      loadingElement: <div style={{ height: `100%` }} />,\n      containerElement: <div style={{ height: `400px` }} />,\n      mapElement: <div style={{ height: `100%` }} />,\n    }),\n    lifecycle({\n      componentWillMount() {\n        const refs = {}\n  \n        this.setState({\n          bounds: null,\n          center: {\n            lat: 41.9, lng: -87.624\n          },\n          markers: [],\n          onMapMounted: ref => {\n            refs.map = ref;\n          },\n          onBoundsChanged: () => {\n            this.setState({\n              bounds: refs.map.getBounds(),\n              center: refs.map.getCenter(),\n            })\n          },\n          onSearchBoxMounted: ref => {\n            refs.searchBox = ref;\n          },\n          onPlacesChanged: () => {\n            const places = refs.searchBox.getPlaces();\n            const bounds = new google.maps.LatLngBounds();\n  \n            places.forEach(place => {\n              if (place.geometry.viewport) {\n                bounds.union(place.geometry.viewport)\n              } else {\n                bounds.extend(place.geometry.location)\n              }\n            });\n            const nextMarkers = places.map(place => ({\n              position: place.geometry.location,\n            }));\n            const nextCenter = _.get(nextMarkers, '0.position', this.state.center);\n  \n            this.setState({\n              center: nextCenter,\n              markers: nextMarkers,\n            });\n            // refs.map.fitBounds(bounds);\n          },\n        })\n      },\n    }),\n    withScriptjs,\n    withGoogleMap)\n    ((props) =>\n  <GoogleMap\n    defaultZoom={8}\n    defaultCenter={{ lat: -34.397, lng: 150.644 }}\n  >\n    {/* <SearchBox\n      ref={props.onSearchBoxMounted}\n      bounds={props.bounds}\n      controlPosition={google.maps.ControlPosition.TOP_LEFT}\n      onPlacesChanged={props.onPlacesChanged}\n    >\n      <input\n        type=\"text\"\n        placeholder=\"Customized your placeholder\"\n        style={{\n          boxSizing: `border-box`,\n          border: `1px solid transparent`,\n          width: `240px`,\n          height: `32px`,\n          marginTop: `27px`,\n          padding: `0 12px`,\n          borderRadius: `3px`,\n          boxShadow: `0 2px 6px rgba(0, 0, 0, 0.3)`,\n          fontSize: `14px`,\n          outline: `none`,\n          textOverflow: `ellipses`,\n        }}\n      />\n    </SearchBox> */}\n    {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\n  </GoogleMap>\n)\n\n  return(\n    <Container space padding>\n    <div>\n      <h1>test</h1>\n      <button onClick={handleRefetch }>Button</button>\n\n  <MapComponent isMarkerShown/>\n    </div>\n    </Container>\n  )\n  \n\n//   const [locations, setLocations] = useState(data);\n//   const [categories, setCategories] = useState(undefined);\n//   const [center, setCenter] = useState({});\n//   const [activeLocation, setActiveLocation] = useState(undefined);\n//   const [search, setSearch] = useState(\"\");\n//   const [zoom, setZoom] = useState(10);\n\n//   useEffect(() => {\n//     navigator.geolocation.getCurrentPosition((position) => {\n//       if (position) {\n//         setCenter({\n//           lat: position.coords.latitude,\n//           lng: position.coords.longitude,\n//         });\n//       } else {\n//         setCenter({\n//           lat: 43.6539697,\n//           lng: -79.4338794,\n//         });\n//       }\n//     });\n//   }, []);\n\n//   useEffect(() => {\n//     if (!loading) {\n//       setLocations(data.allDealers);\n\n//       setCategories(\n//         data?.dealersConnection?.edges\n//           .map(({ node }) => node.city)\n//           .filter((value, index, self) => self.indexOf(value) === index)\n//           .sort()\n//       );\n//     }\n//   }, [data]);\n\n//   const containerStyle = {\n//     width: \"100%\",\n//     height: \"90vh\",\n//     maxHeight: \"50vh\",\n//   };\n\n//   const mapOptions = {\n//     imagePath:\n//       \"https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m\",\n//   };\n\n//   const HandleSetup = (loc, index) => {\n//     // setInfo({ ...loc, index });\n//     setActiveLocation(index);\n//     setCenter({ lat: loc.lat, lng: loc.lng });\n//     setZoom(16);\n//   };\n\n//   useEffect(() => {\n//     fetchMore({\n//       query: DEALER_QUERY,\n//       variables: {\n//         search,\n//       },\n//       updateQuery: (previousResult, { fetchMoreResult }) => {\n//         if (!fetchMoreResult) {\n//           return previousResult;\n//         }\n\n//         console.log(previousResult, fetchMoreResult);\n\n//         setCategories(\n//           fetchMoreResult.dealersConnection.edges\n//             .map(({ node }) => node.city)\n//             .filter((value, index, self) => self.indexOf(value) === index)\n//             .sort()\n//         );\n//         setLocations(fetchMoreResult.dealersConnection.edges);\n//       },\n//     });\n//   }, [search]);\n\n//   const dealer = (loc) => (\n//     <>\n//       <h5>{loc.dealer}</h5>\n//       <InRow>\n//         <h6>Address:</h6>{\" \"}\n//         <span>\n//           {loc.address} {loc.postal} {loc.city} {loc.province}\n//         </span>\n//       </InRow>\n\n//       {/* <InRow>\n//   //       <h6>Contact Person:</h6> <span>{loc.person}</span>\n//   //     </InRow>\n//   //     <InRow>\n//   //       <h6>Email:</h6>{\" \"}\n//   //       <a href={`mailto:${loc.email}`}>\n//   //         <span>{loc.email}</span>\n//   //       </a>\n//   //     </InRow>\n//   //     {loc.phone && (\n//   //       <InRow>\n//   //         <h6>Phone:</h6>{\" \"}\n//   //         <a href={`tel:${loc.phone}`}>\n//   //           <span>{loc.phone}</span>\n//   //         </a>\n//   //       </InRow>\n//   //     )} */}\n//     </>\n//   );\n\n//   const { isLoaded, loadError } = useLoadScript({\n//     googleMapsApiKey: process.env.REACT_APP_MAP_API_KEY,\n//     libraries: [\"places\"], // ,\n//     // ...otherOptions\n//   });\n\n//   const opacity = {\n//     initial: { x: -10, opacity: 0 },\n//     animate: { x: 0, opacity: 1 },\n//     exit: { x: 10, opacity: 0 },\n//   };\n\n//   if (!center.lat || categories === undefined || !isLoaded) {\n//     return <AnimatePresence exitBeforeEnter><LoadingS initial=\"initial\"\n//     animate=\"animate\"\n//     exit=\"exit\"\n//     variants={opacity} /></AnimatePresence>;\n//   }\n\n//   console.log(locations);\n  \n  \n//   return (\n//     <AnimatePresence exitBeforeEnter>\n      \n//     <Container>\n//       <Left  initial=\"initial\"\n//             animate=\"animate\"\n//             exit=\"exit\"\n//             variants={opacity}>\n//         <Content>\n//           {categories !== undefined && categories.length > 0 ? (\n//             categories.map((item, index) => {\n//               return (\n//                 <City key={index}>\n//                   <h4>{item}</h4>\n//                   {locations.map(({ node }) => {\n//                     if (node.city === item) {\n//                       return (\n//                         <Dealer\n//                           key={node.id}\n//                           active={activeLocation === node.id}\n//                           onClick={() => {\n//                             setCenter({\n//                               lat: node.lat,\n//                               lng: node.lng,\n//                             });\n//                             HandleSetup(node, node.id);\n//                             window.scrollTo(0, 0);\n//                           }}\n//                         >\n//                           {dealer(node)}\n//                         </Dealer>\n//                       );\n//                     }\n//                   })}\n//                 </City>\n//               );\n//             })\n//           ) : (\n//             <h3>There is no city with those letters</h3>\n//           )}\n//         </Content>\n//       </Left>\n//       <Right  initial=\"initial\"\n//             animate=\"animate\"\n//             exit=\"exit\"\n//             variants={opacity}>\n//         <Fixed>\n//           <H2>\n//             Ostaco Windows and Doors products are proudly distributed by many\n//             retailers across Ontario. Please fill out this form and our team\n//             will quickly get back to you with information on your nearest\n//             dealer.\n//           </H2>\n//           <Form>\n//             <InputS\n//               type=\"search\"\n//               name=\"search\"\n//               placeholder=\"Which city are you looking for?\"\n//               value={search}\n//               onChange={(e) => setSearch(e.target.value)}\n//             />\n//           </Form>\n//           {center.lat && (\n//             <GoogleMap\n//               center={center}\n//               mapContainerStyle={containerStyle}\n//               zoom={zoom}\n//             >\n//               <MarkerClusterer options={mapOptions} averageCenter={true}>\n//                 {(clusterer) =>\n//                   locations.map(({ node }) => (\n//                     <MarkerS\n//                       key={node.id}\n//                       position={node}\n//                       clusterer={clusterer}\n//                       title={node.name}\n//                       active={activeLocation === node.id}\n//                       onClick={() => HandleSetup(node, node.id)}\n//                     />\n//                   ))\n//                 }\n//               </MarkerClusterer>\n\n//               {(activeLocation && locations) &&\n//                 locations.map(({ node }) => {\n//                   return (\n//                     node.id === activeLocation && (\n//                       <InfoWindow\n//                         onCloseClick={() => setActiveLocation(undefined)}\n//                         position={{ lat: node.lat, lng: node.lng }}\n//                         key={node.id}\n//                       >\n//                         <>\n//                           <h5>{node.dealer}</h5>\n\n//                           <InRow>\n//                             <h6>Address:</h6>\n//                             <span>\n//                               {node.address} {node.postal} {node.city}{\" \"}\n//                               {node.province}\n//                             </span>\n//                           </InRow>\n//                         </>\n//                       </InfoWindow>\n//                     )\n//                   );\n//                 })}\n//             </GoogleMap>\n//           )}\n//         </Fixed>\n//       </Right>\n//     </Container>\n//     </AnimatePresence>\n//   );\n};\n\n// const Container = styled(motion.div)`\n//   display: grid;\n//   grid-gap: 1.5em;\n//   @media (min-width: 768px) {\n//     grid-template-columns: 2fr 3fr;\n//   }\n// `;\n\nconst LoadingS = motion.custom(styled(Loading)``)\n\n\nconst Left = styled(motion.div)`\n  display: grid;\n  grid-row: 2;\n  @media (min-width: 768px) {\n    grid-row: 1;\n  }\n`;\n\nconst Right = styled(motion.div)`\n  display: grid;\n  @media (min-width: 768px) {\n    position: relative;\n  }\n`;\n\nconst H2 = styled.h2`\n  font-size: 0.875rem;\n  font-weight: 400;\n  max-width: 450px;\n`;\n\nconst Fixed = styled.div`\n  display: grid;\n  grid-gap: 2vh;\n  @media (min-width: 768px) {\n    position: fixed;\n    width: 52.5vw;\n  }\n`;\n\nconst InputS = styled.input`\n  max-width: 450px;\n`;\n\nconst Content = styled.ul`\n  list-style: none;\n  padding-inline-start: 0px;\n  display: grid;\n  grid-gap: 1.5em;\n  h4 {\n    margin: 16px 0 0;\n  }\n`;\n\nconst Dealer = styled.div`\n  display: grid;\n  grid-gap: 0.5em;\n  h6 {\n    margin: 0;\n  }\n`;\n\nconst MarkerS = styled(Marker)`\n  transform: scale(1.1);\n`;\n\nconst InRow = styled.div`\n  display: grid;\n  grid-auto-flow: column;\n  justify-content: start;\n  align-items: baseline;\n  grid-gap: 1em;\n`;\n\nconst City = styled.div`\n  h4 {\n    grid-column: 1/-1;\n  }\n  display: grid;\n  grid-gap: 1em;\n`;\n\nconst Form = styled.form`\n  display: grid;\n`;\n\nexport default DealerFinder;\n"]},"metadata":{},"sourceType":"module"}